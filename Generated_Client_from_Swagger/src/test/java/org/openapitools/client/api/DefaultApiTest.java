/*
 * User Management
 * Service to manage users
 *
 * The version of the OpenAPI document: 2020.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.User;
import org.openapitools.client.model.Users;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Creates a new user
     *
     * Creates a new user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        User user = null;
        api.createUser(user);
        // TODO: test validations
    }
    
    /**
     * Deletes the user using its ID
     *
     * Deletes a single user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        Integer id = null;
        api.deleteUser(id);
        // TODO: test validations
    }
    
    /**
     * Get all users
     *
     * Returns a list of all users
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllUsersTest() throws ApiException {
        Users response = api.getAllUsers();
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getExternalGrammarTest() throws ApiException {
        String path = null;
        api.getExternalGrammar(path);
        // TODO: test validations
    }
    
    /**
     * Find user by ID
     *
     * Returns a single user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserByIdTest() throws ApiException {
        Integer id = null;
        User response = api.getUserById(id);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWadlTest() throws ApiException {
        api.getWadl();
        // TODO: test validations
    }
    
    /**
     * Update the user using its ID
     *
     * Updates a single user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        Integer id = null;
        User user = null;
        User response = api.updateUser(id, user);
        // TODO: test validations
    }
    
}
